unit UEditTauxMarchandise;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics,
  Controls, Forms, uniGUITypes, uniGUIAbstractClasses, Data.DB,
  uniGUIClasses, uniGUIForm, uniPanel, uniGUIBaseClasses, uniLabel,
  uniMultiItem, uniComboBox, uniDBComboBox, uniDBLookupComboBox, uniEdit,
  uniDateTimePicker, uniButton;

type
  TFEditTauxMarchandise = class(TUniForm)
    UniContainerPanel1: TUniContainerPanel;
    UniPanel1: TUniPanel;
    UniPanel2: TUniPanel;
    DBLOperation: TUniDBLookupComboBox;
    UniLabel3: TUniLabel;
    UniLabel4: TUniLabel;
    EdMontantTauxMarch: TUniFormattedNumberEdit;
    EdDateDebutTauxMarch: TUniDateTimePicker;
    UniLabel1: TUniLabel;
    LbFin: TUniLabel;
    EdDateFinTauxMarch: TUniDateTimePicker;
    BtnSave: TUniButton;
    BtnCancel: TUniButton;
    UniLabel2: TUniLabel;
    UniFormattedNumberEdit1: TUniFormattedNumberEdit;
    procedure UniFormShow(Sender: TObject);
    procedure BtnSaveClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    var
    id_TauxMarch, ope_TauxMarch, min_TauxMarch, max_TauxMarch, taux_TauxMarch, debut_TauxMarch, fin_TauxMarch : string;
    FmContext : string;
    EditContext : string;
  end;

function FEditTauxMarchandise: TFEditTauxMarchandise;

implementation

{$R *.dfm}

uses
  MainModule, uniGUIApplication, UGlobal, ULoadData, UFunction, UTaux;

function FEditTauxMarchandise: TFEditTauxMarchandise;
begin
  Result := TFEditTauxMarchandise(DM.GetFormInstance(TFEditTauxMarchandise));
end;

procedure TFEditTauxMarchandise.BtnSaveClick(Sender: TObject);
begin
  if FmContext = AddContext then
      begin
             if DBLOperation.IsBlank then
                  begin
                     MessageDlg('Veuillez sélectionner  l''Operation ',mtWarning,[mbok]);
                     DBLOperation.JSInterface.JSCall('focus' ,[]);
                     Abort;
                  end
              else

               with  DM.QCheck do
              begin
                   close;
                   SQL.Clear;
                   sql.add('select * from taux_operation T, operation O where T.operation_taux = O.id_operation and date_fin is null AND T.operation_taux=:id_ope ');
                   Parameters.ParamByName('id_ope').Value:=DBLOperation.KeyValue;
                   ExecSQL;
                   Open;
              end;

              if DM.QCheck.RecordCount > 0 then
                   begin
                       MessageDlg('Cette Opération a un taux en cours de validité ',mtError,[mbok]);
                       DBLOperation.JSInterface.JSCall('focus' ,[]);
                       Abort;
                   end
              else

              if EdMontantTauxMarch.Value < 0 then
                  begin
                     MessageDlg('Veuillez renseigner le Taux',mtWarning,[mbok]);
                     EdMontantTauxMarch.JSInterface.JSCall('focus' ,[]);
                     Abort;
                  end
              else

              if EdDateDebutTauxMarch.IsBlank then
                  begin
                     MessageDlg('Veuillez renseigner la Date',mtWarning,[mbok]);
                     EdMontantTauxMarch.JSInterface.JSCall('focus' ,[]);
                     Abort;
                  end
              else

              begin
                    MessageDlg('Voulez-vous enregister ?', mtConfirmation, mbYesNo,
                          procedure(Sender: TComponent; Res: Integer)
                          begin
                            case Res of
                              mrYes :
                                  begin
                                        with DM.QSave do
                                               begin
                                                  SQL.Text := ('INSERT INTO taux_operation (taux_euro, date_debut, operation_taux ) Values (:taux, :debut, :operation  )');
                                                  Parameters.ParamByName('taux').Value:=  (FormatCurr('0.00#', EdMontantTauxMarch.Value)).Replace(',', '.');
                                                  Parameters.ParamByName('debut').Value:= datefr(EdDateDebutTauxMarch.Text);
                                                  Parameters.ParamByName('operation').Value:= DBLOperation.KeyValue;
                                                  ExecSQL;
                                              end;


                                             with DM.QMax  do
                                               begin
                                                   close;
                                                   SQL.Clear;
                                                    SQL.Add('select max(id) from taux_operation');
                                                    ExecSQL;
                                                   Open;
                                               end;
                                             MessageDlg('Enregistrement effectué',mtConfirmation,[mbok]);
                                               FTaux.ShowDataTauxOpe;
                                             DM.DQ_Grid_TauxOpe.Locate('id',dm.QMax.Fields[0].AsString,[loCaseInsensitive] );
                                             close;
                                end
                            end ;
                          end
                        );
              end;

      end

    else

     //MISE EN FIN
  if FmContext = EndUpContext then
      begin

        if EdDateFinTauxMarch.DateTime = 0 then
              begin
                 MessageDlg('Veuillez renseigner le Date Fin',mtWarning,[mbok]);
                 EdDateFinTauxMarch.JSInterface.JSCall('focus' ,[]);
                 Abort;
              end
          else

                MessageDlg('Voulez-vous Mettre Fin á ce Taux ?', mtConfirmation, mbYesNo,
                      procedure(Sender: TComponent; Res: Integer)
                      begin
                        case Res of
                          mrYes :
                              begin
                                    with DM.QSave do
                                          begin
                                              SQL.Text := ('UPDATE taux_operation SET date_fin=:fin WHERE id=:id');
                                              Parameters.ParamByName('id').Value:= id_TauxMarch;
                                              Parameters.ParamByName('fin').Value:= msqlDateTime(EdDateFinTauxMarch);
                                              ExecSQL;
                                          end;


                                       MessageDlg('Opération effectuée',mtConfirmation,[mbok]);
                                       FTaux.ShowDataTauxOpe;
                                       DM.DQ_Grid_TauxOpe.Locate('id',id_TauxMarch,[loCaseInsensitive] );
                                       close;

                            end
                        end ;
                      end
                    );
          end

         else
end;

procedure TFEditTauxMarchandise.UniFormShow(Sender: TObject);
begin
  if FmContext = AddContext then
  begin
    EdDateDebutTauxMarch.DateTime := 0;
  end;

  if FmContext = EndUpContext then
  begin
    EdDateFinTauxMarch.DateTime := 0;
  end;


  LoadDBLOperation;
  EdDateFinTauxMarch.ShowBlankDate:= True;

end;

end.
