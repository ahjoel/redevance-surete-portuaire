unit URapportEscale;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics,
  Controls, Forms, uniGUITypes, uniGUIAbstractClasses,
  uniGUIClasses, uniGUIForm, uniGUIBaseClasses, uniPanel, uniGroupBox,
  uniBasicGrid, uniDBGrid, uniLabel, uniEdit, uniButton, frxClass,
  frxExportBaseDialog, frxExportPDF, frxDBSet, uniComboBox, uniMultiItem,
  uniDBComboBox, uniDBLookupComboBox, uniDateTimePicker;

type
  TFRapportEscale = class(TUniForm)
    MainContainer: TUniContainerPanel;
    PanOp: TUniPanel;
    BtnDel: TUniButton;
    BtnUpdate: TUniButton;
    BtnAdd: TUniButton;
    EdSearch: TUniEdit;
    UniLabel1: TUniLabel;
    BtnValidate: TUniButton;
    BtnControl: TUniButton;
    DBGrid: TUniDBGrid;
    UniContainerPanel1: TUniContainerPanel;
    PanTitle: TUniPanel;
    UniPanel1: TUniPanel;
    frxReport: TfrxReport;
    UniContainerPanel2: TUniContainerPanel;
    UniContainerPanel4: TUniContainerPanel;
    BtnExport: TUniButton;
    PanRowCount: TUniPanel;
    frxDBDataset: TfrxDBDataset;
    frxPDFExport: TfrxPDFExport;
    UniDBGrid: TUniDBGrid;
    BtnDetails: TUniButton;
    procedure BtnAddClick(Sender: TObject);
    procedure UniFormShow(Sender: TObject);
    procedure UniDBGridRecordCount(Sender: TUniDBGrid; var RecCount: Integer);
    procedure BtnDetailsClick(Sender: TObject);
    procedure BtnControlClick(Sender: TObject);
  private
    { Private declarations }
    procedure UpdateLoadData;
  public
    { Public declarations }
    procedure ShowData;
  end;

function FRapportEscale: TFRapportEscale;

var
    query_print: string ;
    filter, search, init_query, query:string;
    exercice_filter :string;
    title :string = 'Rapport Escale';
    FrmMode, FrmModeTitle : string;

implementation

{$R *.dfm}

uses
  MainModule, uniGUIApplication, UEditRapportEscale, UGlobal, UFunction,
  UReport, UUpdateRapportEscale, UEditEscale, ULoadData;

function FRapportEscale: TFRapportEscale;
begin
  Result := TFRapportEscale(DM.GetFormInstance(TFRapportEscale));
end;

procedure TFRapportEscale.UpdateLoadData;
begin
    //UPDATE CHECK VARIABLES
   FUpdateRapportEscale.id_rap :=DM.DQ_Grid_LigneRapEsc.FieldValues['id_ligne_rap'];
   FUpdateRapportEscale.num_atp :=DM.DQ_Grid_LigneRapEsc.FieldValues['num_atp'];

   //UPDATE LOAD_DATA
   FUpdateRapportEscale.DBLRechNavire.KeyValue :=DM.DQ_Grid_LigneRapEsc.FieldValues['id_navire'];
   FUpdateRapportEscale.DBLRechCons.KeyValue :=DM.DQ_Grid_LigneRapEsc.FieldValues['id_consignataire'];
   FUpdateRapportEscale.edRechAccost.DateTime :=DM.DQ_Grid_LigneRapEsc.FieldValues['date_accost'];


   FUpdateRapportEscale.EdNumATP.Text :=DM.DQ_Grid_LigneRapEsc.FieldValues['num_atp'];
   FUpdateRapportEscale.EdNumVoyage.Text :=DM.DQ_Grid_LigneRapEsc.FieldValues['num_voyage'];
   FUpdateRapportEscale.EdDate.Text :=DM.DQ_Grid_LigneRapEsc.FieldValues['date_rappport'];

end;

procedure TFRapportEscale.BtnControlClick(Sender: TObject);
begin
    FUpdateRapportEscale.Caption := FrmEditTitle(title, ControlTitle);

    FUpdateRapportEscale.ShowModal;
    FUpdateRapportEscale.BtnSave.Caption := ControlBtnCaption;
    FUpdateRapportEscale.BtnSave.IconCls := 'check2';
    FUpdateRapportEscale.FmContext := ControlContext;

    query_print:= init_query_details_rapport_escale + ' AND L.rapport_ligne_rap ='+DBGrid.DataSource.DataSet.FieldByName('id_rap_esc').AsString + ' ORDER BY libelle_marchandise';


    ExQuery(DM.DQ_Grid_LigneRapEsc , query_print) ;
       if DM.QStand.RecordCount > 0 then
       begin
           FUpdateRapportEscale.ShowModal;

           UpdateLoadData;

           //ENABLE DATA

           //UPDATE LOAD_DATA
           FUpdateRapportEscale.Group_rech.Enabled := False;
           FUpdateRapportEscale.Group_infos.Enabled := False;
           FUpdateRapportEscale.PanRap.Enabled := False;
           FUpdateRapportEscale.PanAddLine.Enabled := False;


       end

       else
end;

procedure TFRapportEscale.BtnDetailsClick(Sender: TObject);
begin

     query_print:= init_query_details_rapport_escale + ' AND L.rapport_ligne_rap ='+DBGrid.DataSource.DataSet.FieldByName('id_rap_esc').AsString + ' ORDER BY libelle_marchandise';
     FReport.DataAndShowReport(DM.QPrint, query_print, FRapportEscale.frxDBDataset, FRapportEscale.frxReport, FRapportEscale.frxPDFExport, FReport.URLFrame, 'Details_Rapport_Escale');

 end;

procedure TFRapportEscale.ShowData;
  begin
      filter:=' order by date desc' ;

      if EdSearch.IsBlank then search:='' else

      search:=' AND (UPPER(num_voyage) LIKE ''%'+UpperCase(EdSearch.Text)+'%'')';

       exercice_filter := ' AND E.exercice='''+ IdExerciceInst +'''';

      query:=init_query_rapport_escale + exercice_filter + search+ filter;

      DM.DQ_Grid_RapEsc.Close;
      DM.DQ_Grid_RapEsc.SQL.Clear;
      DM.DQ_Grid_RapEsc.SQL.Text := query;
      DM.DQ_Grid_RapEsc.Open;
  end;

procedure TFRapportEscale.UniDBGridRecordCount(Sender: TUniDBGrid;
  var RecCount: Integer);
begin
    PanRowCount.Caption := IntToStr(DBGrid.DataSource.DataSet.RecordCount) ;
  if  DBGrid.DataSource.DataSet.RecordCount=0 then
      begin
            BtnUpdate.Enabled:=False;
            BtnDel.Enabled:=False;
            BtnControl.Enabled:=False;
            BtnValidate.Enabled:=False;
      end
    else
       begin
          BtnUpdate.Enabled:=true;
         // BtnDel.Enabled:=true;
          BtnControl.Enabled:=true;
          BtnValidate.Enabled:=true;
       end;
end;

procedure TFRapportEscale.UniFormShow(Sender: TObject);
begin
    ShowData;
end;

procedure TFRapportEscale.BtnAddClick(Sender: TObject);
begin
    FEditRapportEscale.EditContext := FormContext;
    FEditRapportEscale.FmContext := AddContext;

    FEditRapportEscale.Caption := FrmEditTitle(title, AddTitle);
    FEditRapportEscale.ShowModal;
end;

end.
