unit UEditPort;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics,
  Controls, Forms, uniGUITypes, uniGUIAbstractClasses,
  uniGUIClasses, uniGUIForm, uniMultiItem, uniComboBox, uniDBComboBox,
  uniDBLookupComboBox, uniEdit, uniLabel, uniButton, uniPanel, uniGUIBaseClasses;

type
  TFEditPort = class(TUniForm)
    UniContainerPanel1: TUniContainerPanel;
    PanOps: TUniPanel;
    BtnCancel: TUniButton;
    BtnSave: TUniButton;
    UniPanel1: TUniPanel;
    UniLabel4: TUniLabel;
    EdCode: TUniEdit;
    EdLib: TUniEdit;
    UniLabel1: TUniLabel;
    UniLabel2: TUniLabel;
    DBLPays: TUniDBLookupComboBox;
    procedure BtnCancelClick(Sender: TObject);
    procedure BtnSaveClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
     var
    id_port, lib_port, code_port, pays_port : string;
    FmContext : string;
    EditContext : string;
  end;

function FEditPort: TFEditPort;

implementation

{$R *.dfm}

uses
  MainModule, uniGUIApplication, UFunction, UGlobal, ULoadData;

function FEditPort: TFEditPort;
begin
  Result := TFEditPort(DM.GetFormInstance(TFEditPort));
end;

procedure TFEditPort.BtnCancelClick(Sender: TObject);
begin
  close;
end;

procedure TFEditPort.BtnSaveClick(Sender: TObject);
begin
      //INSERT
  if FmContext = AddContext then
      begin
        if EdNom.IsBlank then
              begin
                 MessageDlg('Veuillez renseigner le Nom',mtWarning,[mbok]);
                 EdNom.JSInterface.JSCall('focus' ,[]);
                 Abort;
              end
        else
              with  DM.QCheck do
                begin
                     close;
                     SQL.Clear;
                     sql.add('select * from navire where nom_navire=:nom_navire');
                     params.ParamByName('nom_navire').Value:=EdNom.text;
                     ExecSQL;
                     Open;
                end;
                if DM.QCheck.RecordCount > 0 then
                     begin
                         MessageDlg('Un Navire posséde dejà ce Nom',mtError,[mbok]);
                         EdNom.JSInterface.JSCall('focus' ,[]);
                         Abort;
                     end

            else

             if EdImma.IsBlank = False then

                with  DM.QCheck2 do
                  begin
                       close;
                       SQL.Clear;
                       sql.add('select * from navire where imma_navire=:imma_navire');
                       params.ParamByName('imma_navire').Value:=EdImma.text;
                       ExecSQL;
                       Open;
                  end;
                  if DM.QCheck2.RecordCount > 0 then
                       begin
                           MessageDlg('Un Navire posséde dejà cet immatricule',mtError,[mbok]);
                           EdImma.JSInterface.JSCall('focus' ,[]);
                           Abort;
                       end


          else

              begin
                    MessageDlg('Voulez-vous enregister ?', mtConfirmation, mbYesNo,
                          procedure(Sender: TComponent; Res: Integer)
                          begin
                            case Res of
                              mrYes :
                                  begin
                                        with DM.QSave do
                                              begin
                                                  SQL.Text := ('INSERT INTO navire (nom_navire, imma_navire, type_navire, pays_navire )'#13+
                                                          ' Values ( :nom, :imma, :type, :pays)');
                                                  params.ParamByName('nom').Value:= EdNom.Text;
                                                  params.ParamByName('imma').Value:= EdImma.Text;
                                                  params.ParamByName('type').Value:= DBLTypeNav.KeyValue;
                                                  params.ParamByName('pays').Value:=DBLPays.KeyValue;
                                                  ExecSQL;
                                              end;
                                        begin
                                        if EditContext = LookUpContext then
                                            LoadDBLNavire
                                        else
                                          if EditContext = FormContext then
                                              FNavire.ShowData
                                        end;

                                        close;
                                end
                            end ;
                          end
                        );
              end;

      end

    else
end;

end.
